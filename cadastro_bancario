from random import randint
import os

def menu():
    print("""MACK BANK – ESCOLHA UMA OPÇÃO
          
    (1) CADASTRAR CONTA CORRENTE
    (2) DEPOSITAR
    (3) SACAR
    (4) CONSULTAR SALDO
    (5) CONSULTAR EXTRATO
    (6) FINALIZAR
    """)

def limpar_tela():
    if os.name == "nt":
        os.system("cls")
    else:
        os.system("cls")

def cadastro_cliente(dados_cliente):

    def gerar_conta():
        # randint -> Return a random integer N such that a <= N <= b. Alias for randrange(a, b+1).
        conta = randint(1000, 9999)
        return conta

    # aqui nessa parte eu adiciono o número da conta na lista com os dados do cliente:
    dados_cliente.append(gerar_conta())

    def conta():

        while True: 

            limpar_tela()

            print("Mack Bank - Cadastro de Conta\n")
            print(f"Número da Conta: {dados_cliente[0]}")
            
            # nome do cliente
            try: 
                print(f"Nome do Cliente: {dados_cliente[1]}")
            except:
                nome_cliente = input("Nome do Cliente: ")

                if nome_cliente.strip() == "": 
                    input("O nome do cliente precisa ser preenchido. Pressione ENTER para prosseguir...")
                    continue
                elif nome_cliente.strip().isnumeric(): 
                    input("O nome do cliente não pode ser numérico. Pressione ENTER para prosseguir...")
                    continue

                dados_cliente.append(nome_cliente)

            # telefone
            try:
                print(f"Telefone.......: {dados_cliente[2]}")
            except:
                try:
                    telefone = int(input("Telefone.......: "))
                    dados_cliente.append(telefone)
                except:
                    input("Digite um valor correto para o telefon. Pressione ENTER para prosseguir...")
                    continue

            # e-mail
            try: 
                print(f"E-mail..........: {dados_cliente[3]}")
            except:
                email = input("E-mail..........: ")

                email = email.strip()
                if not "@" in email or not "." in email: 
                    input("Email Inválido! Pressione ENTER para prosseguir...")
                    continue

                dados_cliente.append(email)

            # saldo inicial
            try:
                print(f"Saldo Inicial...: R$ {dados_cliente[4]}")
            except:
                try:
                    saldo_inical = float(input("Saldo Inicial...: R$ "))
                    if saldo_inical < 1000: raise 
                    dados_cliente.append(saldo_inical)
                except:
                    input("O saldo inicial precisa ser numérico e maior que 1000. Pressione ENTER para prosseguir...") 
                    continue

            # limite de crédito
            try:
                print(f"Limite de Crédito: R$ {dados_cliente[5]}")
            except:
                try:
                    limite_credito = float(input("Limite de Crédito: R$ "))
                    dados_cliente.append(limite_credito)
                except:
                    input("O valor precisa ser numérico e maior ou igual a 0. Pressione ENTER para prosseguir...")
                    continue

            # senha
            senha = input(f"Senha............: ")

            if len(senha) != 6: 
                input("A senha precisa ter 6 caracteres. Pressione ENTER para prosseguir...")
                continue
            else: 
                confirmacao_senha = input("Repita a Senha...: ")
                if senha != confirmacao_senha: 
                    input("As senhas precisam ser iguais! Pressione ENTER para prosseguir...")
                    continue
                dados_cliente.append(senha)
                
            input("\nCadastro realizado! Pressione ENTER para voltar ao menu...")
            return dados_cliente

    conta()
    


def deposito(dados_cliente, saques_depositos):

    limpar_tela()

    print("MACK BANK – SAQUE DA CONTA\n")

    # verifico se o formato dos números são validos e se o funcionamento está certo.
    try:
        numero_conta = int(input("Informe o número da conta: "))

        if (numero_conta == dados_cliente[0]) == False: raise ValueError("Conta não encontrada.")
                    
        print(f"Nome do Cliente: {dados_cliente[1]}")

        valor_deposito = float(input("Digite o valor do depósito: "))

        if valor_deposito <= 0:
            raise ValueError("Digite um valor maior do que 0.")
        
        dados_cliente[4] = dados_cliente[4] + valor_deposito
        saques_depositos.append(valor_deposito)

        input("\nDepósito realizado com sucesso! Pressione ENTER para prosseguir.")
        
    except ValueError as e:
        input(f"{e} Pressione ENTER para tentar novamente...")
        deposito(dados_cliente, saques_depositos)

    except Exception as e:
        input(f"{e} Pressione ENTER para tentar novamente...")
        deposito(dados_cliente, saques_depositos)

    return dados_cliente, saques_depositos

fim = False
cadastro_preenchido = False
saques_depositos = []
dados_cliente = []

while not fim:

    limpar_tela()
    menu()

    opcao = int(input("Sua opção: "))

    match opcao:
        # cadastro
        case 1:
            if not cadastro_preenchido:
                limpar_tela()
                dados_cliente = cadastro_cliente(dados_cliente)
                cadastro_preenchido = True
            else:
                input("O cadastro já foi feito. Presione ENTER para voltar ao menu inicial.")
        # deposito
        case 2:
            if not cadastro_preenchido:
                input("O cadastro ainda não foi feito. Presione ENTER para voltar ao menu inicial.")
            else:
                dados_cliente, saques_depositos = deposito(dados_cliente, saques_depositos)
        # saque
        case 3:
            ...
        # consulta saldo
        case 4:
            ...
        # consulta extrato
        case 5:
            ...
        # finalizar
        case 6:
            fim = True
        # opção inválida
        case _:
            input("\nDigite uma opção válida! Pressine ENTER para voltar ao menu...")

limpar_tela()
print("""MACK BANK – SOBRE
      
Este programa foi desenvolvido por:
      
Daniel Monteiro - 32389574
""")
